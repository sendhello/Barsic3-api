version: '3.8'

services:

  barsic-web:
    container_name: barsic-web
    hostname: barsic-web
    build: .
    environment:
      DEBUG: ${DEBUG}
      PROJECT_NAME: ${PROJECT_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # AppSettings
      MSSQL_DRIVER_TYPE: ${MSSQL_DRIVER_TYPE}
      MSSQL_SERVER: ${MSSQL_SERVER}
      MSSQL_USER: ${MSSQL_USER}
      MSSQL_PWD: ${MSSQL_PWD}
      MSSQL_DATABASE1: ${MSSQL_DATABASE1}
      MSSQL_DATABASE2: ${MSSQL_DATABASE2}
      MSSQL_SERVER_RK: ${MSSQL_SERVER_RK}
      MSSQL_USER_RK: ${MSSQL_USER_RK}
      MSSQL_PWD_RK: ${MSSQL_PWD_RK}
      MSSQL_DATABASE_RK: ${MSSQL_DATABASE_RK}
      LOCAL_FOLDER: ${LOCAL_FOLDER}
      REPORT_PATH: ${REPORT_PATH}
      YADISK_TOKEN: ${YADISK_TOKEN}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      TELEGRAM_CHANEL_ID: ${TELEGRAM_CHANEL_ID}
      REPORT_NAMES: ${REPORT_NAMES}
      # Google Docs Settings
      GOOGLE_DOC_VERSION: ${GOOGLE_DOC_VERSION}
      GOOGLE_ALL_READ: ${GOOGLE_ALL_READ}
      GOOGLE_READER_LIST: ${GOOGLE_READER_LIST}
      GOOGLE_WRITER_LIST: ${GOOGLE_WRITER_LIST}
      GOOGLE_API_PROJECT_ID: ${GOOGLE_API_PROJECT_ID}
      GOOGLE_API_PRIVATE_KEY_ID: ${GOOGLE_API_PRIVATE_KEY_ID}
      GOOGLE_API_PRIVATE_KEY: ${GOOGLE_API_PRIVATE_KEY}
      GOOGLE_API_CLIENT_EMAIL: ${GOOGLE_API_CLIENT_EMAIL}
      GOOGLE_API_CLIENT_ID: ${GOOGLE_API_CLIENT_ID}
      GOOGLE_API_CLIENT_X509_CERT_URL: ${GOOGLE_API_CLIENT_X509_CERT_URL}
    entrypoint: "sh barsic_web-dev.sh"
    networks:
      - network
    ports:
      - "8000:8000"
    volumes:
      - ./:/opt/app/
      - ./reports:/opt/app/reports/
    depends_on:
      - redis
      - postgres

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:15.2
    networks:
      - network
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - barsic_pg:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  redis:
    container_name: redis
    hostname: redis
    image: redis:7.2-rc1
    environment:
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD}
    volumes:
      - barsic_redis:/data
    ports:
      - "6379:6379"
    networks:
      - network

  mssql:
    container_name: mssql
    hostname: mssql
    image: mcr.microsoft.com/azure-sql-edge:latest
    cap_add:
      - SYS_PTRACE
    environment:
      ACCEPT_EULA: ${ACCEPT_EULA}
      MSSQL_USER: ${MSSQL_USER}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      MSSQL_PID: ${MSSQL_PID}
    volumes:
      - azure-sql-storage:/var/opt/mssql
      - ./dev/backup/:/var/opt/backup
    ports:
      - "1433:1433"
    networks:
      - network

#  sqlcmd:
#    image: mcr.microsoft.com/mssql-tools:latest
#    command: /opt/mssql_scripts/restore.sh
#    stdin_open: true
#    environment:
#      MSSQL_HOST: ${MSSQL_HOST}
#      MSSQL_PORT: ${MSSQL_PORT}
#      MSSQL_USER: ${MSSQL_USER}
#      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
#    volumes:
#      - ./dev/mssql_scripts/:/opt/mssql_scripts
#    networks:
#      - network
#    depends_on:
#      mssql:
#        condition: service_started

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:1.25
    volumes:
      - ./src/nginx.conf:/etc/nginx/nginx.conf
      - ./src/configs:/etc/nginx/conf.d
    depends_on:
      - barsic-web
    ports:
      - "80:80"
    networks:
      - network

volumes:
  barsic_pg:
  barsic_redis:
  azure-sql-storage:

networks:
  network: